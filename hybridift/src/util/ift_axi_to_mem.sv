/* Generated by Yosys 0.42 (git sha1 20a432e89, g++ 11.3.0-1ubuntu1~22.04 -fPIC -Os) */

module hybridift_axi_slave128(araddr_s0, arburst_s0, arcache_s0, arid_s0, arlen_s0, arprot_s0, arready_s0, arsize_s0, arvalid_s0, awaddr_s0, awburst_s0, awcache_s0, awid_s0, awlen_s0, awprot_s0, awready_s0, awsize_s0, awvalid_s0, bid_s0, bready_s0, bresp_s0
, bvalid_s0, pad_cpu_rst_b, pll_core_cpuclk, rdata_s0, rid_s0, rlast_s0, rready_s0, rresp_s0, rvalid_s0, wdata_s0, wid_s0, wlast_s0, wready_s0, wstrb_s0, wvalid_s0, mem_req_o, mem_addr_o, mem_wdata_o, mem_strb_o, mem_we_o, mem_rdata_o
, araddr_s0_t0, arburst_s0_t0, arcache_s0_t0, arid_s0_t0, arlen_s0_t0, arprot_s0_t0, arready_s0_t0, arsize_s0_t0, arvalid_s0_t0, awaddr_s0_t0, awburst_s0_t0, awcache_s0_t0, awid_s0_t0, awlen_s0_t0, awprot_s0_t0, awready_s0_t0, awsize_s0_t0, awvalid_s0_t0, bid_s0_t0, bready_s0_t0, bresp_s0_t0
, bvalid_s0_t0, pad_cpu_rst_b_t0, pll_core_cpuclk_t0, rdata_s0_t0, rid_s0_t0, rlast_s0_t0, rready_s0_t0, rresp_s0_t0, rvalid_s0_t0, wdata_s0_t0, wid_s0_t0, wlast_s0_t0, wready_s0_t0, wstrb_s0_t0, wvalid_s0_t0, mem_we_o_t0, mem_wdata_o_t0, mem_strb_o_t0, mem_req_o_t0, mem_rdata_o_t0, mem_addr_o_t0
);
  wire [39:0] _0000_;
  wire [39:0] _0001_;
  wire _0002_;
  wire _0003_;
  wire [7:0] _0004_;
  wire [7:0] _0005_;
  wire _0006_;
  wire _0007_;
  wire [7:0] _0008_;
  wire [7:0] _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire [127:0] _0014_;
  wire [127:0] _0015_;
  wire [15:0] _0016_;
  wire [15:0] _0017_;
  wire [1:0] _0018_;
  wire [1:0] _0019_;
  wire [1:0] _0020_;
  wire [1:0] _0021_;
  wire [1:0] _0022_;
  wire [1:0] _0023_;
  wire [1:0] _0024_;
  wire [1:0] _0025_;
  wire [1:0] _0026_;
  wire [7:0] _0027_;
  wire [7:0] _0028_;
  wire [7:0] _0029_;
  wire [7:0] _0030_;
  wire [39:0] _0031_;
  wire [39:0] _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire [7:0] _0043_;
  wire [1:0] _0044_;
  wire [7:0] _0045_;
  wire [7:0] _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire [127:0] _0062_;
  wire [15:0] _0063_;
  wire _0064_;
  wire [39:0] _0065_;
  wire [39:0] _0066_;
  wire [39:0] _0067_;
  wire [39:0] _0068_;
  wire [7:0] _0069_;
  wire [1:0] _0070_;
  wire [1:0] _0071_;
  wire [39:0] _0072_;
  wire [1:0] _0073_;
  wire _0074_;
  wire [15:0] _0075_;
  wire [15:0] _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire [4:0] _0082_;
  wire [1:0] _0083_;
  wire [1:0] _0084_;
  wire [1:0] _0085_;
  wire [2:0] _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire [1:0] _0090_;
  wire [1:0] _0091_;
  wire [1:0] _0092_;
  wire [7:0] _0093_;
  wire [1:0] _0094_;
  wire [7:0] _0095_;
  wire [7:0] _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire [7:0] _0120_;
  wire [7:0] _0121_;
  wire [1:0] _0122_;
  wire [7:0] _0123_;
  wire [7:0] _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire [127:0] _0246_;
  wire [127:0] _0247_;
  wire [15:0] _0248_;
  wire [15:0] _0249_;
  wire [127:0] _0250_;
  wire [127:0] _0251_;
  wire [15:0] _0252_;
  wire [15:0] _0253_;
  wire _0254_;
  wire _0255_;
  wire [39:0] _0256_;
  wire [39:0] _0257_;
  wire [39:0] _0258_;
  wire [39:0] _0259_;
  wire [39:0] _0260_;
  wire [39:0] _0261_;
  wire [39:0] _0262_;
  wire [39:0] _0263_;
  wire [39:0] _0264_;
  wire [39:0] _0265_;
  wire [39:0] _0266_;
  wire [39:0] _0267_;
  wire [39:0] _0268_;
  wire [7:0] _0269_;
  wire [7:0] _0270_;
  wire [7:0] _0271_;
  wire [7:0] _0272_;
  wire [7:0] _0273_;
  wire [7:0] _0274_;
  wire [1:0] _0275_;
  wire [1:0] _0276_;
  wire [1:0] _0277_;
  wire [39:0] _0278_;
  wire [39:0] _0279_;
  wire [39:0] _0280_;
  wire [39:0] _0281_;
  wire [7:0] _0282_;
  wire [7:0] _0283_;
  wire [7:0] _0284_;
  wire [7:0] _0285_;
  wire [7:0] _0286_;
  wire [7:0] _0287_;
  wire [7:0] _0288_;
  wire [7:0] _0289_;
  wire [7:0] _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire [7:0] _0294_;
  wire [7:0] _0295_;
  wire [7:0] _0296_;
  wire [7:0] _0297_;
  wire [7:0] _0298_;
  wire [7:0] _0299_;
  wire [7:0] _0300_;
  wire [7:0] _0301_;
  wire [7:0] _0302_;
  wire [4:0] _0303_;
  wire [1:0] _0304_;
  wire [1:0] _0305_;
  wire [1:0] _0306_;
  wire [2:0] _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire [7:0] _0311_;
  wire [7:0] _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire [1:0] _0316_;
  wire [1:0] _0317_;
  wire [1:0] _0318_;
  wire [1:0] _0319_;
  wire [1:0] _0320_;
  wire [1:0] _0321_;
  wire [1:0] _0322_;
  wire [1:0] _0323_;
  wire [1:0] _0324_;
  wire [7:0] _0325_;
  wire [7:0] _0326_;
  wire [1:0] _0327_;
  wire [7:0] _0328_;
  wire [7:0] _0329_;
  wire [7:0] _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire [127:0] _0372_;
  wire [15:0] _0373_;
  wire [127:0] _0374_;
  wire [15:0] _0375_;
  wire _0376_;
  wire [39:0] _0377_;
  wire [39:0] _0378_;
  wire [39:0] _0379_;
  wire [39:0] _0380_;
  wire [39:0] _0381_;
  wire [39:0] _0382_;
  wire [39:0] _0383_;
  wire [39:0] _0384_;
  wire [39:0] _0385_;
  wire [39:0] _0386_;
  wire [39:0] _0387_;
  wire [39:0] _0388_;
  wire [39:0] _0389_;
  wire [7:0] _0390_;
  wire [7:0] _0391_;
  wire [7:0] _0392_;
  wire [1:0] _0393_;
  wire [39:0] _0394_;
  wire [39:0] _0395_;
  wire [39:0] _0396_;
  wire _0397_;
  wire _0398_;
  wire [7:0] _0399_;
  wire [7:0] _0400_;
  wire [39:0] _0401_;
  wire [39:0] _0402_;
  wire [39:0] _0403_;
  wire [39:0] _0404_;
  wire [7:0] _0405_;
  wire [7:0] _0406_;
  wire [7:0] _0407_;
  wire [7:0] _0408_;
  wire [7:0] _0409_;
  wire [7:0] _0410_;
  wire [7:0] _0411_;
  wire [7:0] _0412_;
  wire [7:0] _0413_;
  wire [7:0] _0414_;
  wire [7:0] _0415_;
  wire [7:0] _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire [7:0] _0421_;
  wire [7:0] _0422_;
  wire [7:0] _0423_;
  wire [7:0] _0424_;
  wire [7:0] _0425_;
  wire [7:0] _0426_;
  wire [7:0] _0427_;
  wire [7:0] _0428_;
  wire [7:0] _0429_;
  wire [7:0] _0430_;
  wire [7:0] _0431_;
  wire [7:0] _0432_;
  wire _0433_;
  wire [7:0] _0434_;
  wire _0435_;
  wire [1:0] _0436_;
  wire [1:0] _0437_;
  wire [1:0] _0438_;
  wire [1:0] _0439_;
  wire [1:0] _0440_;
  wire [1:0] _0441_;
  wire [1:0] _0442_;
  wire [1:0] _0443_;
  wire [1:0] _0444_;
  wire [7:0] _0445_;
  wire [39:0] _0446_;
  wire [39:0] _0447_;
  wire [39:0] _0448_;
  wire [39:0] _0449_;
  wire [7:0] _0450_;
  wire [7:0] _0451_;
  wire [39:0] _0452_;
  wire [39:0] _0453_;
  wire [7:0] _0454_;
  wire [7:0] _0455_;
  wire [39:0] _0456_;
  wire [39:0] _0457_;
  wire [7:0] _0458_;
  wire [7:0] _0459_;
  wire [7:0] _0460_;
  wire _0461_;
  wire [7:0] _0462_;
  wire [7:0] _0463_;
  wire [7:0] _0464_;
  wire [1:0] _0465_;
  wire [1:0] _0466_;
  wire [1:0] _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire [7:0] _0482_;
  wire [7:0] _0483_;
  wire [7:0] _0484_;
  wire [7:0] _0485_;
  wire [39:0] _0486_;
  wire [39:0] _0487_;
  wire [39:0] _0488_;
  wire [39:0] _0489_;
  wire [39:0] _0490_;
  wire [39:0] _0491_;
  wire [1:0] _0492_;
  wire [1:0] _0493_;
  wire [1:0] _0494_;
  wire [1:0] _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire [15:0] _0585_;
  wire _0586_;
  wire [39:0] _0587_;
  wire [39:0] _0588_;
  wire [39:0] _0589_;
  wire [39:0] _0590_;
  wire [39:0] _0591_;
  wire [39:0] _0592_;
  wire [39:0] _0593_;
  wire [39:0] _0594_;
  wire [39:0] _0595_;
  input [39:0] araddr_s0;
  wire [39:0] araddr_s0;
  input [39:0] araddr_s0_t0;
  wire [39:0] araddr_s0_t0;
  input [1:0] arburst_s0;
  wire [1:0] arburst_s0;
  input [1:0] arburst_s0_t0;
  wire [1:0] arburst_s0_t0;
  input [3:0] arcache_s0;
  wire [3:0] arcache_s0;
  input [3:0] arcache_s0_t0;
  wire [3:0] arcache_s0_t0;
  input [7:0] arid_s0;
  wire [7:0] arid_s0;
  input [7:0] arid_s0_t0;
  wire [7:0] arid_s0_t0;
  reg [7:0] arlen;
  input [7:0] arlen_s0;
  wire [7:0] arlen_s0;
  input [7:0] arlen_s0_t0;
  wire [7:0] arlen_s0_t0;
  reg [7:0] arlen_t0;
  input [2:0] arprot_s0;
  wire [2:0] arprot_s0;
  input [2:0] arprot_s0_t0;
  wire [2:0] arprot_s0_t0;
  output arready_s0;
  wire arready_s0;
  output arready_s0_t0;
  wire arready_s0_t0;
  input [2:0] arsize_s0;
  wire [2:0] arsize_s0;
  input [2:0] arsize_s0_t0;
  wire [2:0] arsize_s0_t0;
  input arvalid_s0;
  wire arvalid_s0;
  input arvalid_s0_t0;
  wire arvalid_s0_t0;
  input [39:0] awaddr_s0;
  wire [39:0] awaddr_s0;
  input [39:0] awaddr_s0_t0;
  wire [39:0] awaddr_s0_t0;
  input [1:0] awburst_s0;
  wire [1:0] awburst_s0;
  input [1:0] awburst_s0_t0;
  wire [1:0] awburst_s0_t0;
  input [3:0] awcache_s0;
  wire [3:0] awcache_s0;
  input [3:0] awcache_s0_t0;
  wire [3:0] awcache_s0_t0;
  reg [7:0] awid;
  input [7:0] awid_s0;
  wire [7:0] awid_s0;
  input [7:0] awid_s0_t0;
  wire [7:0] awid_s0_t0;
  reg [7:0] awid_t0;
  reg [7:0] awlen;
  input [7:0] awlen_s0;
  wire [7:0] awlen_s0;
  input [7:0] awlen_s0_t0;
  wire [7:0] awlen_s0_t0;
  reg [7:0] awlen_t0;
  input [2:0] awprot_s0;
  wire [2:0] awprot_s0;
  input [2:0] awprot_s0_t0;
  wire [2:0] awprot_s0_t0;
  output awready_s0;
  wire awready_s0;
  output awready_s0_t0;
  wire awready_s0_t0;
  input [2:0] awsize_s0;
  wire [2:0] awsize_s0;
  input [2:0] awsize_s0_t0;
  wire [2:0] awsize_s0_t0;
  input awvalid_s0;
  wire awvalid_s0;
  input awvalid_s0_t0;
  wire awvalid_s0_t0;
  output [7:0] bid_s0;
  wire [7:0] bid_s0;
  output [7:0] bid_s0_t0;
  wire [7:0] bid_s0_t0;
  input bready_s0;
  wire bready_s0;
  input bready_s0_t0;
  wire bready_s0_t0;
  output [1:0] bresp_s0;
  wire [1:0] bresp_s0;
  output [1:0] bresp_s0_t0;
  wire [1:0] bresp_s0_t0;
  output bvalid_s0;
  wire bvalid_s0;
  output bvalid_s0_t0;
  wire bvalid_s0_t0;
  reg [1:0] cur_state;
  reg [1:0] cur_state_t0;
  reg [39:0] mem_addr;
  output [20:0] mem_addr_o;
  wire [20:0] mem_addr_o;
  output [20:0] mem_addr_o_t0;
  wire [20:0] mem_addr_o_t0;
  reg [39:0] mem_addr_t0;
  wire mem_cen;
  wire mem_cen_t0;
  wire [127:0] mem_din;
  wire [127:0] mem_din_t0;
  output [127:0] mem_rdata_o;
  wire [127:0] mem_rdata_o;
  output [127:0] mem_rdata_o_t0;
  wire [127:0] mem_rdata_o_t0;
  output mem_req_o;
  wire mem_req_o;
  output mem_req_o_t0;
  wire mem_req_o_t0;
  output [127:0] mem_strb_o;
  wire [127:0] mem_strb_o;
  output [127:0] mem_strb_o_t0;
  wire [127:0] mem_strb_o_t0;
  output [127:0] mem_wdata_o;
  wire [127:0] mem_wdata_o;
  output [127:0] mem_wdata_o_t0;
  wire [127:0] mem_wdata_o_t0;
  output mem_we_o;
  wire mem_we_o;
  output mem_we_o_t0;
  wire mem_we_o_t0;
  wire [15:0] mem_wen;
  wire [15:0] mem_wen_t0;
  wire [1:0] next_state;
  wire [1:0] next_state_t0;
  input pad_cpu_rst_b;
  wire pad_cpu_rst_b;
  input pad_cpu_rst_b_t0;
  wire pad_cpu_rst_b_t0;
  input pll_core_cpuclk;
  wire pll_core_cpuclk;
  input pll_core_cpuclk_t0;
  wire pll_core_cpuclk_t0;
  output [127:0] rdata_s0;
  wire [127:0] rdata_s0;
  output [127:0] rdata_s0_t0;
  wire [127:0] rdata_s0_t0;
  reg read_dly;
  reg read_dly_t0;
  wire read_over;
  wire read_over_t0;
  reg [7:0] read_step;
  reg [7:0] read_step_t0;
  output [7:0] rid_s0;
  reg [7:0] rid_s0;
  output [7:0] rid_s0_t0;
  reg [7:0] rid_s0_t0;
  output rlast_s0;
  wire rlast_s0;
  output rlast_s0_t0;
  wire rlast_s0_t0;
  input rready_s0;
  wire rready_s0;
  input rready_s0_t0;
  wire rready_s0_t0;
  output [1:0] rresp_s0;
  wire [1:0] rresp_s0;
  output [1:0] rresp_s0_t0;
  wire [1:0] rresp_s0_t0;
  output rvalid_s0;
  reg rvalid_s0;
  output rvalid_s0_t0;
  reg rvalid_s0_t0;
  input [127:0] wdata_s0;
  wire [127:0] wdata_s0;
  input [127:0] wdata_s0_t0;
  wire [127:0] wdata_s0_t0;
  input [7:0] wid_s0;
  wire [7:0] wid_s0;
  input [7:0] wid_s0_t0;
  wire [7:0] wid_s0_t0;
  input wlast_s0;
  wire wlast_s0;
  input wlast_s0_t0;
  wire wlast_s0_t0;
  wire wrap2_1;
  wire wrap2_1_t0;
  wire wrap2_read_en;
  wire wrap2_read_en_t0;
  wire wrap2_write_en;
  wire wrap2_write_en_t0;
  wire wrap4_1;
  wire wrap4_1_t0;
  wire wrap4_2;
  wire wrap4_2_t0;
  wire wrap4_3;
  wire wrap4_3_t0;
  wire wrap4_read_en;
  wire wrap4_read_en_t0;
  wire wrap4_write_en;
  wire wrap4_write_en_t0;
  output wready_s0;
  wire wready_s0;
  output wready_s0_t0;
  wire wready_s0_t0;
  wire write_over;
  wire write_over_t0;
  reg [7:0] write_step;
  reg [7:0] write_step_t0;
  input [15:0] wstrb_s0;
  wire [15:0] wstrb_s0;
  input [15:0] wstrb_s0_t0;
  wire [15:0] wstrb_s0_t0;
  input wvalid_s0;
  wire wvalid_s0;
  input wvalid_s0_t0;
  wire wvalid_s0_t0;
  assign _0027_ = read_step + 1'h1;
  assign _0029_ = write_step + 1'h1;
  assign _0031_ = mem_addr + 40'h0000000010;
  assign _0482_ = _0120_ + 8'h01;
  assign _0484_ = _0121_ + 8'h01;
  assign _0486_ = _0278_ + 40'h0000000010;
  assign _0399_ = read_step | read_step_t0;
  assign _0400_ = write_step | write_step_t0;
  assign _0483_ = _0399_ + 8'h01;
  assign _0485_ = _0400_ + 8'h01;
  assign _0487_ = _0394_ + 40'h0000000010;
  assign _0454_ = _0482_ ^ _0483_;
  assign _0455_ = _0484_ ^ _0485_;
  assign _0456_ = _0486_ ^ _0487_;
  assign _0028_ = _0454_ | read_step_t0;
  assign _0030_ = _0455_ | write_step_t0;
  assign _0032_ = _0456_ | mem_addr_t0;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) read_dly_t0 <= 1'h0;
    else read_dly_t0 <= _0003_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) cur_state_t0 <= 2'h0;
    else cur_state_t0 <= next_state_t0;
  assign _0077_ = ~ _0033_;
  assign _0078_ = ~ _0035_;
  assign _0079_ = ~ _0037_;
  assign _0081_ = ~ _0039_;
  assign _0080_ = ~ _0498_;
  assign _0457_ = _0000_ ^ mem_addr;
  assign _0458_ = _0008_ ^ write_step;
  assign _0459_ = _0004_ ^ read_step;
  assign _0460_ = arid_s0 ^ rid_s0;
  assign _0461_ = _0006_ ^ rvalid_s0;
  assign _0462_ = arlen_s0 ^ arlen;
  assign _0463_ = awlen_s0 ^ awlen;
  assign _0464_ = awid_s0 ^ awid;
  assign _0401_ = _0001_ | mem_addr_t0;
  assign _0405_ = _0009_ | write_step_t0;
  assign _0409_ = _0005_ | read_step_t0;
  assign _0413_ = arid_s0_t0 | rid_s0_t0;
  assign _0417_ = _0007_ | rvalid_s0_t0;
  assign _0421_ = arlen_s0_t0 | arlen_t0;
  assign _0425_ = awlen_s0_t0 | awlen_t0;
  assign _0429_ = awid_s0_t0 | awid_t0;
  assign _0402_ = _0457_ | _0401_;
  assign _0406_ = _0458_ | _0405_;
  assign _0410_ = _0459_ | _0409_;
  assign _0414_ = _0460_ | _0413_;
  assign _0418_ = _0461_ | _0417_;
  assign _0422_ = _0462_ | _0421_;
  assign _0426_ = _0463_ | _0425_;
  assign _0430_ = _0464_ | _0429_;
  assign _0279_ = { _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_, _0033_ } & _0001_;
  assign _0282_ = { _0035_, _0035_, _0035_, _0035_, _0035_, _0035_, _0035_, _0035_ } & _0009_;
  assign _0285_ = { _0037_, _0037_, _0037_, _0037_, _0037_, _0037_, _0037_, _0037_ } & _0005_;
  assign _0288_ = { _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_ } & arid_s0_t0;
  assign _0291_ = _0039_ & _0007_;
  assign _0294_ = { _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_ } & arlen_s0_t0;
  assign _0297_ = { _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_ } & awlen_s0_t0;
  assign _0300_ = { _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_, _0498_ } & awid_s0_t0;
  assign _0280_ = { _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_, _0077_ } & mem_addr_t0;
  assign _0283_ = { _0078_, _0078_, _0078_, _0078_, _0078_, _0078_, _0078_, _0078_ } & write_step_t0;
  assign _0286_ = { _0079_, _0079_, _0079_, _0079_, _0079_, _0079_, _0079_, _0079_ } & read_step_t0;
  assign _0289_ = { _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_ } & rid_s0_t0;
  assign _0292_ = _0081_ & rvalid_s0_t0;
  assign _0295_ = { _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_ } & arlen_t0;
  assign _0298_ = { _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_ } & awlen_t0;
  assign _0301_ = { _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_, _0080_ } & awid_t0;
  assign _0281_ = _0402_ & _0034_;
  assign _0284_ = _0406_ & _0036_;
  assign _0287_ = _0410_ & _0038_;
  assign _0290_ = _0414_ & _0499_;
  assign _0293_ = _0418_ & _0040_;
  assign _0296_ = _0422_ & _0499_;
  assign _0299_ = _0426_ & _0499_;
  assign _0302_ = _0430_ & _0499_;
  assign _0403_ = _0279_ | _0280_;
  assign _0407_ = _0282_ | _0283_;
  assign _0411_ = _0285_ | _0286_;
  assign _0415_ = _0288_ | _0289_;
  assign _0419_ = _0291_ | _0292_;
  assign _0423_ = _0294_ | _0295_;
  assign _0427_ = _0297_ | _0298_;
  assign _0431_ = _0300_ | _0301_;
  assign _0404_ = _0403_ | _0281_;
  assign _0408_ = _0407_ | _0284_;
  assign _0412_ = _0411_ | _0287_;
  assign _0416_ = _0415_ | _0290_;
  assign _0420_ = _0419_ | _0293_;
  assign _0424_ = _0423_ | _0296_;
  assign _0428_ = _0427_ | _0299_;
  assign _0432_ = _0431_ | _0302_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) mem_addr_t0 <= 40'h0000000000;
    else mem_addr_t0 <= _0404_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) write_step_t0 <= 8'h00;
    else write_step_t0 <= _0408_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) read_step_t0 <= 8'h00;
    else read_step_t0 <= _0412_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) rid_s0_t0 <= 8'h00;
    else rid_s0_t0 <= _0416_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) rvalid_s0_t0 <= 1'h0;
    else rvalid_s0_t0 <= _0420_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) arlen_t0 <= 8'h00;
    else arlen_t0 <= _0424_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) awlen_t0 <= 8'h00;
    else awlen_t0 <= _0428_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) awid_t0 <= 8'h00;
    else awid_t0 <= _0432_;
  assign _0098_ = | mem_addr_t0[5:4];
  assign _0099_ = | read_step_t0;
  assign _0097_ = | write_step_t0;
  assign _0100_ = | { arlen_t0, read_step_t0 };
  assign _0101_ = | cur_state_t0;
  assign _0107_ = | { awlen_t0, write_step_t0 };
  assign _0109_ = | arlen_t0;
  assign _0110_ = | awlen_t0;
  assign _0330_ = read_step_t0 | arlen_t0;
  assign _0445_ = write_step_t0 | awlen_t0;
  assign _0044_ = ~ mem_addr_t0[5:4];
  assign _0045_ = ~ read_step_t0;
  assign _0043_ = ~ write_step_t0;
  assign _0046_ = ~ _0330_;
  assign _0071_ = ~ cur_state_t0;
  assign _0093_ = ~ _0445_;
  assign _0095_ = ~ arlen_t0;
  assign _0096_ = ~ awlen_t0;
  assign _0122_ = mem_addr[5:4] & _0044_;
  assign _0120_ = read_step & _0045_;
  assign _0121_ = write_step & _0043_;
  assign _0123_ = read_step & _0046_;
  assign _0277_ = cur_state & _0071_;
  assign _0325_ = write_step & _0093_;
  assign _0328_ = arlen & _0095_;
  assign _0329_ = awlen & _0096_;
  assign _0124_ = arlen & _0046_;
  assign _0326_ = awlen & _0093_;
  assign _0468_ = _0120_ == { 7'h00, _0045_[0] };
  assign _0469_ = _0121_ == { 7'h00, _0043_[0] };
  assign _0470_ = _0122_ == _0044_;
  assign _0471_ = _0120_ == { 6'h00, _0045_[1], 1'h0 };
  assign _0472_ = _0121_ == { 6'h00, _0043_[1], 1'h0 };
  assign _0473_ = _0123_ == _0124_;
  assign _0474_ = _0277_ == { _0071_[1], 1'h0 };
  assign _0475_ = _0277_ == { 1'h0, _0071_[0] };
  assign _0476_ = _0277_ == _0071_;
  assign _0477_ = _0325_ == _0326_;
  assign _0478_ = _0328_ == { 7'h00, _0095_[0] };
  assign _0479_ = _0329_ == { 7'h00, _0096_[0] };
  assign _0480_ = _0328_ == { 6'h00, _0095_[1:0] };
  assign _0481_ = _0329_ == { 6'h00, _0096_[1:0] };
  assign _0519_ = _0468_ & _0099_;
  assign _0521_ = _0469_ & _0097_;
  assign _0517_ = _0470_ & _0098_;
  assign _0523_ = _0471_ & _0099_;
  assign _0525_ = _0472_ & _0097_;
  assign read_over_t0 = _0473_ & _0100_;
  assign bvalid_s0_t0 = _0474_ & _0101_;
  assign wready_s0_t0 = _0475_ & _0101_;
  assign _0503_ = _0476_ & _0101_;
  assign write_over_t0 = _0477_ & _0107_;
  assign _0505_ = _0478_ & _0109_;
  assign _0507_ = _0479_ & _0110_;
  assign _0509_ = _0480_ & _0109_;
  assign _0511_ = _0481_ & _0110_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) mem_addr <= 40'h0000000000;
    else if (_0033_) mem_addr <= _0000_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) write_step <= 8'h00;
    else if (_0035_) write_step <= _0008_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) read_step <= 8'h00;
    else if (_0037_) read_step <= _0004_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) rid_s0 <= 8'h00;
    else if (_0498_) rid_s0 <= arid_s0;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) rvalid_s0 <= 1'h0;
    else if (_0039_) rvalid_s0 <= _0006_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) arlen <= 8'h00;
    else if (_0498_) arlen <= arlen_s0;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) awlen <= 8'h00;
    else if (_0498_) awlen <= awlen_s0;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) awid <= 8'h00;
    else if (_0498_) awid <= awid_s0;
  assign _0125_ = _0528_ & rready_s0;
  assign _0131_ = write_over_t0 & wvalid_s0;
  assign _0134_ = _0530_ & wready_s0;
  assign _0137_ = bvalid_s0_t0 & bready_s0;
  assign _0140_ = _0503_ & rready_s0;
  assign _0143_ = _0534_ & rvalid_s0;
  assign _0146_ = _0013_ & wready_s0;
  assign _0149_ = _0503_ & _0504_;
  assign _0152_ = wready_s0_t0 & _0506_;
  assign _0155_ = _0503_ & _0508_;
  assign _0158_ = wready_s0_t0 & _0510_;
  assign _0161_ = _0513_ & wrap2_read_en;
  assign _0164_ = _0515_ & wrap2_write_en;
  assign _0167_ = mem_addr_t0[4] & _0570_;
  assign _0170_ = _0513_ & wrap4_read_en;
  assign _0173_ = _0515_ & wrap4_write_en;
  assign _0176_ = _0517_ & _0572_;
  assign _0179_ = _0519_ & wrap4_read_en;
  assign _0182_ = _0521_ & wrap4_write_en;
  assign _0185_ = _0517_ & _0574_;
  assign _0188_ = _0523_ & wrap4_read_en;
  assign _0191_ = _0525_ & wrap4_write_en;
  assign _0194_ = _0517_ & _0576_;
  assign _0197_ = _0499_ & arvalid_s0;
  assign _0200_ = _0499_ & awvalid_s0;
  assign _0203_ = _0581_ & _0582_;
  assign _0206_ = wrap2_1_t0 & _0582_;
  assign _0209_ = arvalid_s0_t0 & arready_s0;
  assign _0212_ = _0503_ & read_dly;
  assign _0215_ = rvalid_s0_t0 & rready_s0;
  assign _0128_ = read_over_t0 & rvalid_s0;
  assign _0219_ = wvalid_s0_t0 & wready_s0;
  assign _0126_ = rready_s0_t0 & _0527_;
  assign _0129_ = rvalid_s0_t0 & read_over;
  assign _0132_ = wvalid_s0_t0 & write_over;
  assign _0135_ = wready_s0_t0 & _0529_;
  assign _0138_ = bready_s0_t0 & bvalid_s0;
  assign _0141_ = rready_s0_t0 & _0502_;
  assign _0144_ = rvalid_s0_t0 & _0533_;
  assign _0147_ = wready_s0_t0 & _0537_;
  assign _0150_ = _0505_ & _0502_;
  assign _0153_ = _0507_ & wready_s0;
  assign _0156_ = _0509_ & _0502_;
  assign _0159_ = _0511_ & wready_s0;
  assign _0162_ = wrap2_read_en_t0 & _0512_;
  assign _0165_ = wrap2_write_en_t0 & _0514_;
  assign _0168_ = _0571_ & mem_addr[4];
  assign _0171_ = wrap4_read_en_t0 & _0512_;
  assign _0174_ = wrap4_write_en_t0 & _0514_;
  assign _0177_ = _0573_ & _0516_;
  assign _0180_ = wrap4_read_en_t0 & _0518_;
  assign _0183_ = wrap4_write_en_t0 & _0520_;
  assign _0186_ = _0575_ & _0516_;
  assign _0189_ = wrap4_read_en_t0 & _0522_;
  assign _0192_ = wrap4_write_en_t0 & _0524_;
  assign _0195_ = _0577_ & _0516_;
  assign _0198_ = arvalid_s0_t0 & _0498_;
  assign _0201_ = awvalid_s0_t0 & _0498_;
  assign _0204_ = _0583_ & _0580_;
  assign _0207_ = _0583_ & wrap2_1;
  assign _0210_ = arready_s0_t0 & arvalid_s0;
  assign _0213_ = read_dly_t0 & _0502_;
  assign _0216_ = rready_s0_t0 & rvalid_s0;
  assign _0218_ = rvalid_s0_t0 & _0496_;
  assign _0220_ = wready_s0_t0 & wvalid_s0;
  assign _0127_ = _0528_ & rready_s0_t0;
  assign _0133_ = write_over_t0 & wvalid_s0_t0;
  assign _0136_ = _0530_ & wready_s0_t0;
  assign _0139_ = bvalid_s0_t0 & bready_s0_t0;
  assign _0142_ = _0503_ & rready_s0_t0;
  assign _0145_ = _0534_ & rvalid_s0_t0;
  assign _0148_ = _0013_ & wready_s0_t0;
  assign _0151_ = _0503_ & _0505_;
  assign _0154_ = wready_s0_t0 & _0507_;
  assign _0157_ = _0503_ & _0509_;
  assign _0160_ = wready_s0_t0 & _0511_;
  assign _0163_ = _0513_ & wrap2_read_en_t0;
  assign _0166_ = _0515_ & wrap2_write_en_t0;
  assign _0169_ = mem_addr_t0[4] & _0571_;
  assign _0172_ = _0513_ & wrap4_read_en_t0;
  assign _0175_ = _0515_ & wrap4_write_en_t0;
  assign _0178_ = _0517_ & _0573_;
  assign _0181_ = _0519_ & wrap4_read_en_t0;
  assign _0184_ = _0521_ & wrap4_write_en_t0;
  assign _0187_ = _0517_ & _0575_;
  assign _0190_ = _0523_ & wrap4_read_en_t0;
  assign _0193_ = _0525_ & wrap4_write_en_t0;
  assign _0196_ = _0517_ & _0577_;
  assign _0199_ = _0499_ & arvalid_s0_t0;
  assign _0202_ = _0499_ & awvalid_s0_t0;
  assign _0205_ = _0581_ & _0583_;
  assign _0208_ = wrap2_1_t0 & _0583_;
  assign _0211_ = arvalid_s0_t0 & arready_s0_t0;
  assign _0214_ = _0503_ & read_dly_t0;
  assign _0217_ = rvalid_s0_t0 & rready_s0_t0;
  assign _0130_ = read_over_t0 & rvalid_s0_t0;
  assign _0221_ = wvalid_s0_t0 & wready_s0_t0;
  assign _0331_ = _0125_ | _0126_;
  assign _0332_ = _0128_ | _0129_;
  assign _0333_ = _0131_ | _0132_;
  assign _0334_ = _0134_ | _0135_;
  assign _0335_ = _0137_ | _0138_;
  assign _0336_ = _0140_ | _0141_;
  assign _0337_ = _0143_ | _0144_;
  assign _0338_ = _0146_ | _0147_;
  assign _0339_ = _0149_ | _0150_;
  assign _0340_ = _0152_ | _0153_;
  assign _0341_ = _0155_ | _0156_;
  assign _0342_ = _0158_ | _0159_;
  assign _0343_ = _0161_ | _0162_;
  assign _0344_ = _0164_ | _0165_;
  assign _0345_ = _0167_ | _0168_;
  assign _0346_ = _0170_ | _0171_;
  assign _0347_ = _0173_ | _0174_;
  assign _0348_ = _0176_ | _0177_;
  assign _0349_ = _0179_ | _0180_;
  assign _0350_ = _0182_ | _0183_;
  assign _0351_ = _0185_ | _0186_;
  assign _0352_ = _0188_ | _0189_;
  assign _0353_ = _0191_ | _0192_;
  assign _0354_ = _0194_ | _0195_;
  assign _0355_ = _0197_ | _0198_;
  assign _0356_ = _0200_ | _0201_;
  assign _0357_ = _0203_ | _0204_;
  assign _0358_ = _0206_ | _0207_;
  assign _0359_ = _0209_ | _0210_;
  assign _0360_ = _0212_ | _0213_;
  assign _0361_ = _0215_ | _0216_;
  assign _0362_ = _0128_ | _0218_;
  assign _0363_ = _0219_ | _0220_;
  assign _0022_[1] = _0331_ | _0127_;
  assign _0528_ = _0332_ | _0130_;
  assign _0530_ = _0333_ | _0133_;
  assign _0024_[1] = _0334_ | _0136_;
  assign _0026_[1] = _0335_ | _0139_;
  assign _0534_ = _0336_ | _0142_;
  assign _0536_ = _0337_ | _0145_;
  assign _0539_ = _0338_ | _0148_;
  assign wrap2_read_en_t0 = _0339_ | _0151_;
  assign wrap2_write_en_t0 = _0340_ | _0154_;
  assign wrap4_read_en_t0 = _0341_ | _0157_;
  assign wrap4_write_en_t0 = _0342_ | _0160_;
  assign _0541_ = _0343_ | _0163_;
  assign _0543_ = _0344_ | _0166_;
  assign wrap2_1_t0 = _0345_ | _0169_;
  assign _0545_ = _0346_ | _0172_;
  assign _0547_ = _0347_ | _0175_;
  assign wrap4_1_t0 = _0348_ | _0178_;
  assign _0549_ = _0349_ | _0181_;
  assign _0551_ = _0350_ | _0184_;
  assign wrap4_2_t0 = _0351_ | _0187_;
  assign _0553_ = _0352_ | _0190_;
  assign _0555_ = _0353_ | _0193_;
  assign wrap4_3_t0 = _0354_ | _0196_;
  assign _0557_ = _0355_ | _0199_;
  assign _0559_ = _0356_ | _0202_;
  assign _0563_ = _0357_ | _0205_;
  assign _0565_ = _0358_ | _0208_;
  assign _0567_ = _0359_ | _0211_;
  assign _0569_ = _0360_ | _0214_;
  assign _0561_ = _0361_ | _0217_;
  assign rlast_s0_t0 = _0362_ | _0130_;
  assign _0013_ = _0363_ | _0221_;
  assign _0102_ = | { _0583_, _0565_, _0563_, _0559_, _0557_ };
  assign _0103_ = | { _0539_, _0501_ };
  assign _0104_ = | { _0536_, _0501_ };
  assign _0105_ = | { _0561_, _0569_ };
  assign _0106_ = | { _0503_, wready_s0_t0, bvalid_s0_t0 };
  assign _0108_ = | next_state_t0;
  assign _0082_ = ~ { _0583_, _0565_, _0563_, _0559_, _0557_ };
  assign _0083_ = ~ { _0539_, _0501_ };
  assign _0084_ = ~ { _0501_, _0536_ };
  assign _0085_ = ~ { _0561_, _0569_ };
  assign _0086_ = ~ { _0503_, wready_s0_t0, bvalid_s0_t0 };
  assign _0094_ = ~ next_state_t0;
  assign _0303_ = { _0582_, _0564_, _0562_, _0558_, _0556_ } & _0082_;
  assign _0304_ = { _0538_, _0500_ } & _0083_;
  assign _0305_ = { _0500_, _0535_ } & _0084_;
  assign _0306_ = { _0560_, _0568_ } & _0085_;
  assign _0307_ = { _0502_, wready_s0, bvalid_s0 } & _0086_;
  assign _0327_ = next_state & _0094_;
  assign _0111_ = ! _0277_;
  assign _0112_ = ! _0303_;
  assign _0113_ = ! _0304_;
  assign _0114_ = ! _0305_;
  assign _0115_ = ! _0306_;
  assign _0116_ = ! _0307_;
  assign _0117_ = ! _0327_;
  assign _0118_ = ! _0120_;
  assign _0119_ = ! _0121_;
  assign _0499_ = _0111_ & _0101_;
  assign _0034_ = _0112_ & _0102_;
  assign _0036_ = _0113_ & _0103_;
  assign _0038_ = _0114_ & _0104_;
  assign _0040_ = _0115_ & _0105_;
  assign _0042_ = _0116_ & _0106_;
  assign _0501_ = _0117_ & _0108_;
  assign _0513_ = _0118_ & _0099_;
  assign _0515_ = _0119_ & _0097_;
  assign _0047_ = ~ _0540_;
  assign _0049_ = ~ _0544_;
  assign _0051_ = ~ _0548_;
  assign _0053_ = ~ _0552_;
  assign _0055_ = ~ wrap4_1;
  assign _0057_ = ~ _0578_;
  assign _0061_ = ~ _0566_;
  assign _0048_ = ~ _0542_;
  assign _0050_ = ~ _0546_;
  assign _0052_ = ~ _0550_;
  assign _0054_ = ~ _0554_;
  assign _0056_ = ~ wrap4_2;
  assign _0058_ = ~ wrap4_3;
  assign _0222_ = _0541_ & _0048_;
  assign _0225_ = _0545_ & _0050_;
  assign _0228_ = _0549_ & _0052_;
  assign _0231_ = _0553_ & _0054_;
  assign _0234_ = wrap4_1_t0 & _0056_;
  assign _0237_ = _0579_ & _0058_;
  assign _0240_ = _0013_ & _0060_;
  assign _0243_ = _0567_ & _0060_;
  assign _0223_ = _0543_ & _0047_;
  assign _0226_ = _0547_ & _0049_;
  assign _0229_ = _0551_ & _0051_;
  assign _0232_ = _0555_ & _0053_;
  assign _0235_ = wrap4_2_t0 & _0055_;
  assign _0238_ = wrap4_3_t0 & _0057_;
  assign _0241_ = _0561_ & _0059_;
  assign _0244_ = _0561_ & _0061_;
  assign _0224_ = _0541_ & _0543_;
  assign _0227_ = _0545_ & _0547_;
  assign _0230_ = _0549_ & _0551_;
  assign _0233_ = _0553_ & _0555_;
  assign _0236_ = wrap4_1_t0 & wrap4_2_t0;
  assign _0239_ = _0579_ & wrap4_3_t0;
  assign _0242_ = _0013_ & _0561_;
  assign _0245_ = _0567_ & _0561_;
  assign _0364_ = _0222_ | _0223_;
  assign _0365_ = _0225_ | _0226_;
  assign _0366_ = _0228_ | _0229_;
  assign _0367_ = _0231_ | _0232_;
  assign _0368_ = _0234_ | _0235_;
  assign _0369_ = _0237_ | _0238_;
  assign _0370_ = _0240_ | _0241_;
  assign _0371_ = _0243_ | _0244_;
  assign _0571_ = _0364_ | _0224_;
  assign _0573_ = _0365_ | _0227_;
  assign _0575_ = _0366_ | _0230_;
  assign _0577_ = _0367_ | _0233_;
  assign _0579_ = _0368_ | _0236_;
  assign _0581_ = _0369_ | _0239_;
  assign _0583_ = _0370_ | _0242_;
  assign _0003_ = _0371_ | _0245_;
  assign _0059_ = ~ _0537_;
  assign _0062_ = ~ {};
  assign _0063_ = ~ { _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_, _0502_ };
  assign _0064_ = ~ _0502_;
  assign _0060_ = ~ _0560_;
  assign _0065_ = ~ { _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_ };
  assign _0066_ = ~ { _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_ };
  assign _0067_ = ~ { _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_ };
  assign _0068_ = ~ { _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_ };
  assign _0069_ = ~ { _0500_, _0500_, _0500_, _0500_, _0500_, _0500_, _0500_, _0500_ };
  assign _0070_ = ~ { arvalid_s0, arvalid_s0 };
  assign _0089_ = ~ _0041_;
  assign _0090_ = ~ { bvalid_s0, bvalid_s0 };
  assign _0091_ = ~ { _0502_, _0502_ };
  assign _0092_ = ~ { _0397_, _0397_ };
  assign _0374_ = {} | _0062_;
  assign _0375_ = { _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_ } | _0063_;
  assign _0376_ = _0503_ | _0064_;
  assign _0378_ = { _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_ } | _0065_;
  assign _0381_ = { _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_ } | _0066_;
  assign _0384_ = { _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_ } | _0067_;
  assign _0387_ = { _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_ } | _0068_;
  assign _0391_ = { _0501_, _0501_, _0501_, _0501_, _0501_, _0501_, _0501_, _0501_ } | _0069_;
  assign _0393_ = { arvalid_s0_t0, arvalid_s0_t0 } | _0070_;
  assign _0435_ = _0042_ | _0089_;
  assign _0436_ = { bvalid_s0_t0, bvalid_s0_t0 } | _0090_;
  assign _0439_ = { _0503_, _0503_ } | _0091_;
  assign _0442_ = { _0398_, _0398_ } | _0092_;
  assign _0372_ = {} | {};
  assign _0373_ = { _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_ } | { _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_, _0537_ };
  assign _0377_ = { _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_, _0583_ } | { _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_, _0582_ };
  assign _0379_ = { _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_ } | { _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_, _0564_ };
  assign _0382_ = { _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_ } | { _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_, _0562_ };
  assign _0385_ = { _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_ } | { _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_, _0558_ };
  assign _0388_ = { _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_ } | { _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_, _0556_ };
  assign _0390_ = { _0539_, _0539_, _0539_, _0539_, _0539_, _0539_, _0539_, _0539_ } | { _0538_, _0538_, _0538_, _0538_, _0538_, _0538_, _0538_, _0538_ };
  assign _0392_ = { _0536_, _0536_, _0536_, _0536_, _0536_, _0536_, _0536_, _0536_ } | { _0535_, _0535_, _0535_, _0535_, _0535_, _0535_, _0535_, _0535_ };
  assign _0434_ = { bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0 } | { bvalid_s0, bvalid_s0, bvalid_s0, bvalid_s0, bvalid_s0, bvalid_s0, bvalid_s0, bvalid_s0 };
  assign _0437_ = { bvalid_s0_t0, bvalid_s0_t0 } | { bvalid_s0, bvalid_s0 };
  assign _0440_ = { _0503_, _0503_ } | { _0502_, _0502_ };
  assign _0443_ = { _0398_, _0398_ } | { _0397_, _0397_ };
  assign _0250_ = _0015_ & _0374_;
  assign _0252_ = _0017_ & _0375_;
  assign _0254_ = _0013_ & _0376_;
  assign _0257_ = _0256_ & _0378_;
  assign _0260_ = _0589_ & _0381_;
  assign _0263_ = _0591_ & _0384_;
  assign _0266_ = _0593_ & _0387_;
  assign _0270_ = _0269_ & _0391_;
  assign _0273_ = _0272_ & _0391_;
  assign _0275_ = { 1'h0, awvalid_s0_t0 } & _0393_;
  assign _0313_ = arvalid_s0_t0 & _0435_;
  assign _0316_ = { _0024_[1], _0024_[1] } & _0436_;
  assign _0319_ = _0019_ & _0439_;
  assign _0322_ = _0495_ & _0442_;
  assign _0246_ = wdata_s0_t0 & _0372_;
  assign _0248_ = wstrb_s0_t0 & _0373_;
  assign _0256_ = _0032_ & _0377_;
  assign _0258_ = _0396_ & _0379_;
  assign _0261_ = _0395_ & _0382_;
  assign _0264_ = awaddr_s0_t0 & _0385_;
  assign _0267_ = araddr_s0_t0 & _0388_;
  assign _0269_ = _0030_ & _0390_;
  assign _0272_ = _0028_ & _0392_;
  assign _0311_ = awid_t0 & _0434_;
  assign _0317_ = { _0026_[1], 1'h0 } & _0437_;
  assign _0320_ = { _0022_[1], _0022_[1] } & _0440_;
  assign _0323_ = _0493_ & _0443_;
  assign _0380_ = _0257_ | _0258_;
  assign _0383_ = _0260_ | _0261_;
  assign _0386_ = _0263_ | _0264_;
  assign _0389_ = _0266_ | _0267_;
  assign _0438_ = _0316_ | _0317_;
  assign _0441_ = _0319_ | _0320_;
  assign _0444_ = _0322_ | _0323_;
  assign _0446_ = _0587_ ^ _0595_;
  assign _0447_ = _0588_ ^ _0594_;
  assign _0448_ = _0590_ ^ awaddr_s0;
  assign _0449_ = _0592_ ^ araddr_s0;
  assign _0465_ = _0023_ ^ _0025_;
  assign _0466_ = _0018_ ^ _0021_;
  assign _0467_ = _0494_ ^ _0492_;
  assign _0247_ = {} & wdata_s0;
  assign _0249_ = { _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_, _0013_ } & _0075_;
  assign _0251_ = {} & _0014_;
  assign _0253_ = { _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_, _0503_ } & _0076_;
  assign _0255_ = _0503_ & _0012_;
  assign _0007_ = _0569_ & _0074_;
  assign _0259_ = { _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_, _0565_ } & _0446_;
  assign _0262_ = { _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_, _0563_ } & _0447_;
  assign _0265_ = { _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_, _0559_ } & _0448_;
  assign _0268_ = { _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_, _0557_ } & _0449_;
  assign _0271_ = { _0501_, _0501_, _0501_, _0501_, _0501_, _0501_, _0501_, _0501_ } & _0450_;
  assign _0274_ = { _0501_, _0501_, _0501_, _0501_, _0501_, _0501_, _0501_, _0501_ } & _0451_;
  assign _0276_ = { arvalid_s0_t0, arvalid_s0_t0 } & _0073_;
  assign _0312_ = { bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0, bvalid_s0_t0 } & awid;
  assign _0314_ = _0042_ & _0011_;
  assign _0315_ = _0042_ & _0010_;
  assign _0318_ = { bvalid_s0_t0, bvalid_s0_t0 } & _0465_;
  assign _0321_ = { _0503_, _0503_ } & _0466_;
  assign _0324_ = { _0398_, _0398_ } & _0467_;
  assign _0015_ = _0247_ | _0246_;
  assign _0017_ = _0249_ | _0248_;
  assign mem_din_t0 = _0251_ | _0250_;
  assign mem_wen_t0 = _0253_ | _0252_;
  assign mem_cen_t0 = _0255_ | _0254_;
  assign _0589_ = _0259_ | _0380_;
  assign _0591_ = _0262_ | _0383_;
  assign _0593_ = _0265_ | _0386_;
  assign _0001_ = _0268_ | _0389_;
  assign _0009_ = _0271_ | _0270_;
  assign _0005_ = _0274_ | _0273_;
  assign _0019_ = _0276_ | _0275_;
  assign bid_s0_t0 = _0312_ | _0311_;
  assign awready_s0_t0 = _0314_ | _0313_;
  assign arready_s0_t0 = _0315_ | _0313_;
  assign _0493_ = _0318_ | _0438_;
  assign _0495_ = _0321_ | _0441_;
  assign next_state_t0 = _0324_ | _0444_;
  assign _0033_ = | { _0582_, _0564_, _0562_, _0558_, _0556_ };
  assign _0035_ = | { _0538_, _0500_ };
  assign _0037_ = | { _0500_, _0535_ };
  assign _0039_ = | { _0560_, _0568_ };
  assign _0074_ = ~ _0586_;
  assign _0073_ = ~ _0020_;
  assign _0075_ = ~ _0585_;
  assign _0076_ = ~ _0016_;
  assign _0041_ = | { _0502_, wready_s0, bvalid_s0 };
  assign _0087_ = ~ wready_s0;
  assign _0088_ = ~ bvalid_s0;
  assign _0308_ = wready_s0_t0 & _0088_;
  assign _0309_ = bvalid_s0_t0 & _0087_;
  assign _0310_ = wready_s0_t0 & bvalid_s0_t0;
  assign _0433_ = _0308_ | _0309_;
  assign _0398_ = _0433_ | _0310_;
  assign _0397_ = wready_s0 | bvalid_s0;
  assign bid_s0 = bvalid_s0 ? awid : 8'h00;
  assign awready_s0 = _0041_ ? 1'h0 : _0011_;
  assign arready_s0 = _0041_ ? 1'h0 : _0010_;
  assign _0492_ = bvalid_s0 ? _0025_ : _0023_;
  assign _0494_ = _0502_ ? _0021_ : _0018_;
  assign next_state = _0397_ ? _0492_ : _0494_;
  assign _0072_ = ~ mem_addr_t0;
  assign _0278_ = mem_addr & _0072_;
  assign _0394_ = mem_addr | mem_addr_t0;
  assign _0488_ = _0394_ - 40'h0000000030;
  assign _0490_ = _0394_ - 40'h0000000010;
  assign _0489_ = _0278_ - 40'h0000000030;
  assign _0491_ = _0278_ - 40'h0000000010;
  assign _0452_ = _0488_ ^ _0489_;
  assign _0453_ = _0490_ ^ _0491_;
  assign _0395_ = _0452_ | mem_addr_t0;
  assign _0396_ = _0453_ | mem_addr_t0;
  assign _0497_ = write_step == awlen;
  assign _0500_ = ! next_state;
  assign _0504_ = arlen == 8'h01;
  assign _0506_ = awlen == 8'h01;
  assign _0508_ = arlen == 8'h03;
  assign _0510_ = awlen == 8'h03;
  assign _0512_ = ! read_step;
  assign _0514_ = ! write_step;
  assign _0518_ = read_step == 8'h01;
  assign _0520_ = write_step == 8'h01;
  assign _0516_ = mem_addr[5:4] == 2'h3;
  assign _0522_ = read_step == 8'h02;
  assign _0524_ = write_step == 8'h02;
  assign _0496_ = read_step == arlen;
  assign _0526_ = _0527_ && rready_s0;
  assign _0527_ = read_over && rvalid_s0;
  assign _0529_ = write_over && wvalid_s0;
  assign _0531_ = _0529_ && wready_s0;
  assign _0532_ = bvalid_s0 && bready_s0;
  assign _0533_ = _0502_ && rready_s0;
  assign _0535_ = _0533_ && rvalid_s0;
  assign _0538_ = _0537_ && wready_s0;
  assign wrap2_read_en = _0502_ && _0504_;
  assign wrap2_write_en = wready_s0 && _0506_;
  assign wrap4_read_en = _0502_ && _0508_;
  assign wrap4_write_en = wready_s0 && _0510_;
  assign _0540_ = _0512_ && wrap2_read_en;
  assign _0542_ = _0514_ && wrap2_write_en;
  assign wrap2_1 = mem_addr[4] && _0570_;
  assign _0544_ = _0512_ && wrap4_read_en;
  assign _0546_ = _0514_ && wrap4_write_en;
  assign wrap4_1 = _0516_ && _0572_;
  assign _0548_ = _0518_ && wrap4_read_en;
  assign _0550_ = _0520_ && wrap4_write_en;
  assign wrap4_2 = _0516_ && _0574_;
  assign _0552_ = _0522_ && wrap4_read_en;
  assign _0554_ = _0524_ && wrap4_write_en;
  assign wrap4_3 = _0516_ && _0576_;
  assign _0556_ = _0498_ && arvalid_s0;
  assign _0558_ = _0498_ && awvalid_s0;
  assign _0562_ = _0580_ && _0582_;
  assign _0564_ = wrap2_1 && _0582_;
  assign _0566_ = arvalid_s0 && arready_s0;
  assign _0568_ = _0502_ && read_dly;
  assign _0560_ = rvalid_s0 && rready_s0;
  assign rlast_s0 = _0496_ && rvalid_s0;
  assign _0537_ = wvalid_s0 && wready_s0;
  assign _0570_ = _0540_ || _0542_;
  assign _0572_ = _0544_ || _0546_;
  assign _0574_ = _0548_ || _0550_;
  assign _0576_ = _0552_ || _0554_;
  assign _0578_ = wrap4_1 || wrap4_2;
  assign _0580_ = _0578_ || wrap4_3;
  assign _0582_ = _0537_ || _0560_;
  assign _0584_ = _0566_ || _0560_;
  assign _0585_ = ~ wstrb_s0;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) read_dly <= 1'h0;
    else read_dly <= _0002_;
  always_ff @(posedge pll_core_cpuclk, negedge pad_cpu_rst_b)
    if (!pad_cpu_rst_b) cur_state <= 2'h0;
    else cur_state <= next_state;
  assign _0014_ = _0537_ ? wdata_s0 : 128'h00000000000000000000000000000000;
  assign _0016_ = _0537_ ? _0585_ : 16'hffff;
  assign _0012_ = _0537_ ? 1'h0 : 1'h1;
  assign mem_din = _0502_ ? 128'h00000000000000000000000000000000 : _0014_;
  assign mem_wen = _0502_ ? 16'hffff : _0016_;
  assign mem_cen = _0502_ ? 1'h0 : _0012_;
  assign _0010_ = arvalid_s0 ? 1'h1 : 1'h0;
  assign _0011_ = arvalid_s0 ? 1'h0 : 1'h1;
  assign _0586_ = _0560_ ? 1'h0 : 1'hx;
  assign _0006_ = _0568_ ? 1'h1 : _0586_;
  assign _0002_ = _0584_ ? 1'h1 : 1'h0;
  assign _0587_ = _0582_ ? _0031_ : 40'hxxxxxxxxxx;
  assign _0588_ = _0564_ ? _0595_ : _0587_;
  assign _0590_ = _0562_ ? _0594_ : _0588_;
  assign _0592_ = _0558_ ? awaddr_s0 : _0590_;
  assign _0000_ = _0556_ ? araddr_s0 : _0592_;
  assign _0450_ = _0538_ ? _0029_ : 8'hxx;
  assign _0008_ = _0500_ ? 8'h00 : _0450_;
  assign _0451_ = _0535_ ? _0027_ : 8'hxx;
  assign _0004_ = _0500_ ? 8'h00 : _0451_;
  assign _0025_ = _0532_ ? 2'h0 : 2'h2;
  assign _0023_ = _0531_ ? 2'h2 : 2'h1;
  assign _0021_ = _0526_ ? 2'h0 : 2'h3;
  assign _0020_ = awvalid_s0 ? 2'h1 : 2'h0;
  assign _0018_ = arvalid_s0 ? 2'h3 : _0020_;
  assign bvalid_s0 = cur_state == 2'h2;
  assign wready_s0 = cur_state == 2'h1;
  assign _0502_ = cur_state == 2'h3;
  assign _0498_ = ! cur_state;
  assign _0594_ = mem_addr - 40'h0000000030;
  assign _0595_ = mem_addr - 40'h0000000010;
  assign read_over = _0496_ ? 1'h1 : 1'h0;
  assign write_over = _0497_ ? 1'h1 : 1'h0;
  hybridift_f_spsram_large x_hybridift_f_spsram_large (
    .A(mem_addr[24:4]),
    .A_t0(mem_addr_t0[24:4]),
    .CEN(mem_cen),
    .CEN_t0(mem_cen_t0),
    .CLK(pll_core_cpuclk),
    .CLK_t0(pll_core_cpuclk_t0),
    .D(mem_din),
    .D_t0(mem_din_t0),
    .Q(rdata_s0),
    .Q_t0(rdata_s0_t0),
    .WEN(mem_wen),
    .WEN_t0(mem_wen_t0),
    .mem_addr_o(mem_addr_o),
    .mem_addr_o_t0(mem_addr_o_t0),
    .mem_rdata_o(mem_rdata_o),
    .mem_rdata_o_t0(mem_rdata_o_t0),
    .mem_req_o(mem_req_o),
    .mem_req_o_t0(mem_req_o_t0),
    .mem_strb_o(mem_strb_o),
    .mem_strb_o_t0(mem_strb_o_t0),
    .mem_wdata_o(mem_wdata_o),
    .mem_wdata_o_t0(mem_wdata_o_t0),
    .mem_we_o(mem_we_o),
    .mem_we_o_t0(mem_we_o_t0)
  );
  assign _0022_[0] = _0022_[1];
  assign _0024_[0] = _0024_[1];
  assign _0026_[0] = 1'h0;
  assign bresp_s0 = 2'h0;
  assign bresp_s0_t0 = 2'h0;
  assign rresp_s0 = 2'h0;
  assign rresp_s0_t0 = 2'h0;
endmodule

module hybridift_f_spsram_large(A, CEN, CLK, D, WEN, Q, mem_req_o, mem_addr_o, mem_wdata_o, mem_strb_o, mem_we_o, mem_rdata_o, D_t0, CLK_t0, mem_we_o_t0, mem_wdata_o_t0, mem_strb_o_t0, mem_req_o_t0, mem_rdata_o_t0, mem_addr_o_t0, WEN_t0
, Q_t0, A_t0, CEN_t0);
  wire [15:0] _000_;
  wire [20:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire [15:0] _052_;
  wire [20:0] _053_;
  wire [20:0] _054_;
  wire [20:0] _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire [20:0] _072_;
  wire [20:0] _073_;
  wire [20:0] _074_;
  wire [20:0] _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  input [20:0] A;
  wire [20:0] A;
  input [20:0] A_t0;
  wire [20:0] A_t0;
  input CEN;
  wire CEN;
  input CEN_t0;
  wire CEN_t0;
  input CLK;
  wire CLK;
  input CLK_t0;
  wire CLK_t0;
  input [127:0] D;
  wire [127:0] D;
  input [127:0] D_t0;
  wire [127:0] D_t0;
  output [127:0] Q;
  wire [127:0] Q;
  output [127:0] Q_t0;
  wire [127:0] Q_t0;
  input [15:0] WEN;
  wire [15:0] WEN;
  input [15:0] WEN_t0;
  wire [15:0] WEN_t0;
  reg [20:0] addr_holding;
  reg [20:0] addr_holding_t0;
  output [20:0] mem_addr_o;
  wire [20:0] mem_addr_o;
  output [20:0] mem_addr_o_t0;
  wire [20:0] mem_addr_o_t0;
  output [127:0] mem_rdata_o;
  wire [127:0] mem_rdata_o;
  output [127:0] mem_rdata_o_t0;
  wire [127:0] mem_rdata_o_t0;
  output mem_req_o;
  wire mem_req_o;
  output mem_req_o_t0;
  wire mem_req_o_t0;
  output [127:0] mem_strb_o;
  wire [127:0] mem_strb_o;
  output [127:0] mem_strb_o_t0;
  wire [127:0] mem_strb_o_t0;
  output [127:0] mem_wdata_o;
  wire [127:0] mem_wdata_o;
  output [127:0] mem_wdata_o_t0;
  wire [127:0] mem_wdata_o_t0;
  output mem_we_o;
  wire mem_we_o;
  output mem_we_o_t0;
  wire mem_we_o_t0;
  wire ram0_wen;
  wire ram0_wen_t0;
  wire ram10_wen;
  wire ram10_wen_t0;
  wire ram11_wen;
  wire ram11_wen_t0;
  wire ram12_wen;
  wire ram12_wen_t0;
  wire ram13_wen;
  wire ram13_wen_t0;
  wire ram14_wen;
  wire ram14_wen_t0;
  wire ram15_wen;
  wire ram15_wen_t0;
  wire ram1_wen;
  wire ram1_wen_t0;
  wire ram2_wen;
  wire ram2_wen_t0;
  wire ram3_wen;
  wire ram3_wen_t0;
  wire ram4_wen;
  wire ram4_wen_t0;
  wire ram5_wen;
  wire ram5_wen_t0;
  wire ram6_wen;
  wire ram6_wen_t0;
  wire ram7_wen;
  wire ram7_wen_t0;
  wire ram8_wen;
  wire ram8_wen_t0;
  wire ram9_wen;
  wire ram9_wen_t0;
  always_ff @(posedge CLK)
    addr_holding_t0 <= mem_addr_o_t0;
  assign _004_ = CEN_t0 & _077_;
  assign _007_ = CEN_t0 & _078_;
  assign _010_ = CEN_t0 & _079_;
  assign _013_ = CEN_t0 & _080_;
  assign _016_ = CEN_t0 & _081_;
  assign _019_ = CEN_t0 & _082_;
  assign _022_ = CEN_t0 & _083_;
  assign _025_ = CEN_t0 & _084_;
  assign _028_ = CEN_t0 & _085_;
  assign _031_ = CEN_t0 & _086_;
  assign _034_ = CEN_t0 & _087_;
  assign _037_ = CEN_t0 & _088_;
  assign _040_ = CEN_t0 & _089_;
  assign _043_ = CEN_t0 & _090_;
  assign _046_ = CEN_t0 & _091_;
  assign _049_ = CEN_t0 & _092_;
  assign _005_ = WEN_t0[0] & _076_;
  assign _008_ = WEN_t0[1] & _076_;
  assign _011_ = WEN_t0[2] & _076_;
  assign _014_ = WEN_t0[3] & _076_;
  assign _017_ = WEN_t0[4] & _076_;
  assign _020_ = WEN_t0[5] & _076_;
  assign _023_ = WEN_t0[6] & _076_;
  assign _026_ = WEN_t0[7] & _076_;
  assign _029_ = WEN_t0[8] & _076_;
  assign _032_ = WEN_t0[9] & _076_;
  assign _035_ = WEN_t0[10] & _076_;
  assign _038_ = WEN_t0[11] & _076_;
  assign _041_ = WEN_t0[12] & _076_;
  assign _044_ = WEN_t0[13] & _076_;
  assign _047_ = WEN_t0[14] & _076_;
  assign _050_ = WEN_t0[15] & _076_;
  assign _006_ = CEN_t0 & WEN_t0[0];
  assign _009_ = CEN_t0 & WEN_t0[1];
  assign _012_ = CEN_t0 & WEN_t0[2];
  assign _015_ = CEN_t0 & WEN_t0[3];
  assign _018_ = CEN_t0 & WEN_t0[4];
  assign _021_ = CEN_t0 & WEN_t0[5];
  assign _024_ = CEN_t0 & WEN_t0[6];
  assign _027_ = CEN_t0 & WEN_t0[7];
  assign _030_ = CEN_t0 & WEN_t0[8];
  assign _033_ = CEN_t0 & WEN_t0[9];
  assign _036_ = CEN_t0 & WEN_t0[10];
  assign _039_ = CEN_t0 & WEN_t0[11];
  assign _042_ = CEN_t0 & WEN_t0[12];
  assign _045_ = CEN_t0 & WEN_t0[13];
  assign _048_ = CEN_t0 & WEN_t0[14];
  assign _051_ = CEN_t0 & WEN_t0[15];
  assign _056_ = _004_ | _005_;
  assign _057_ = _007_ | _008_;
  assign _058_ = _010_ | _011_;
  assign _059_ = _013_ | _014_;
  assign _060_ = _016_ | _017_;
  assign _061_ = _019_ | _020_;
  assign _062_ = _022_ | _023_;
  assign _063_ = _025_ | _026_;
  assign _064_ = _028_ | _029_;
  assign _065_ = _031_ | _032_;
  assign _066_ = _034_ | _035_;
  assign _067_ = _037_ | _038_;
  assign _068_ = _040_ | _041_;
  assign _069_ = _043_ | _044_;
  assign _070_ = _046_ | _047_;
  assign _071_ = _049_ | _050_;
  assign ram0_wen_t0 = _056_ | _006_;
  assign ram1_wen_t0 = _057_ | _009_;
  assign ram2_wen_t0 = _058_ | _012_;
  assign ram3_wen_t0 = _059_ | _015_;
  assign ram4_wen_t0 = _060_ | _018_;
  assign ram5_wen_t0 = _061_ | _021_;
  assign ram6_wen_t0 = _062_ | _024_;
  assign ram7_wen_t0 = _063_ | _027_;
  assign ram8_wen_t0 = _064_ | _030_;
  assign ram9_wen_t0 = _065_ | _033_;
  assign ram10_wen_t0 = _066_ | _036_;
  assign ram11_wen_t0 = _067_ | _039_;
  assign ram12_wen_t0 = _068_ | _042_;
  assign ram13_wen_t0 = _069_ | _045_;
  assign ram14_wen_t0 = _070_ | _048_;
  assign ram15_wen_t0 = _071_ | _051_;
  assign _002_ = | { ram0_wen_t0, ram14_wen_t0, ram1_wen_t0, ram2_wen_t0, ram3_wen_t0, ram4_wen_t0, ram5_wen_t0, ram6_wen_t0, ram15_wen_t0, ram7_wen_t0, ram8_wen_t0, ram9_wen_t0, ram10_wen_t0, ram11_wen_t0, ram12_wen_t0, ram13_wen_t0 };
  assign _000_ = ~ { ram15_wen_t0, ram14_wen_t0, ram13_wen_t0, ram12_wen_t0, ram11_wen_t0, ram10_wen_t0, ram9_wen_t0, ram8_wen_t0, ram7_wen_t0, ram6_wen_t0, ram5_wen_t0, ram4_wen_t0, ram3_wen_t0, ram2_wen_t0, ram1_wen_t0, ram0_wen_t0 };
  assign _052_ = { ram15_wen, ram14_wen, ram13_wen, ram12_wen, ram11_wen, ram10_wen, ram9_wen, ram8_wen, ram7_wen, ram6_wen, ram5_wen, ram4_wen, ram3_wen, ram2_wen, ram1_wen, ram0_wen } & _000_;
  assign _003_ = ! _052_;
  assign mem_we_o_t0 = _003_ & _002_;
  assign _001_ = ~ { CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN };
  assign _072_ = { CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0 } | _001_;
  assign _073_ = { CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0 } | { CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN, CEN };
  assign _053_ = A_t0 & _072_;
  assign _054_ = addr_holding_t0 & _073_;
  assign _074_ = _053_ | _054_;
  assign _075_ = A ^ addr_holding;
  assign _055_ = { CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0, CEN_t0 } & _075_;
  assign mem_addr_o_t0 = _055_ | _074_;
  assign ram0_wen = _076_ && _077_;
  assign ram1_wen = _076_ && _078_;
  assign ram2_wen = _076_ && _079_;
  assign ram3_wen = _076_ && _080_;
  assign ram4_wen = _076_ && _081_;
  assign ram5_wen = _076_ && _082_;
  assign ram6_wen = _076_ && _083_;
  assign ram7_wen = _076_ && _084_;
  assign ram8_wen = _076_ && _085_;
  assign ram9_wen = _076_ && _086_;
  assign ram10_wen = _076_ && _087_;
  assign ram11_wen = _076_ && _088_;
  assign ram12_wen = _076_ && _089_;
  assign ram13_wen = _076_ && _090_;
  assign ram14_wen = _076_ && _091_;
  assign ram15_wen = _076_ && _092_;
  assign _077_ = ! WEN[0];
  assign _078_ = ! WEN[1];
  assign _079_ = ! WEN[2];
  assign _080_ = ! WEN[3];
  assign _081_ = ! WEN[4];
  assign _082_ = ! WEN[5];
  assign _083_ = ! WEN[6];
  assign _084_ = ! WEN[7];
  assign _085_ = ! WEN[8];
  assign _086_ = ! WEN[9];
  assign _087_ = ! WEN[10];
  assign _088_ = ! WEN[11];
  assign _089_ = ! WEN[12];
  assign _090_ = ! WEN[13];
  assign _091_ = ! WEN[14];
  assign _092_ = ! WEN[15];
  assign _076_ = ! CEN;
  assign mem_req_o = ~ CEN;
  always_ff @(posedge CLK)
    addr_holding <= mem_addr_o;
  assign mem_we_o = | { ram15_wen, ram14_wen, ram13_wen, ram12_wen, ram11_wen, ram10_wen, ram9_wen, ram8_wen, ram7_wen, ram6_wen, ram5_wen, ram4_wen, ram3_wen, ram2_wen, ram1_wen, ram0_wen };
  assign mem_addr_o = CEN ? addr_holding : A;
  assign mem_rdata_o = Q;
  assign mem_rdata_o_t0 = Q_t0;
  assign mem_req_o_t0 = CEN_t0;
  assign mem_strb_o = { ram15_wen, ram15_wen, ram15_wen, ram15_wen, ram15_wen, ram15_wen, ram15_wen, ram15_wen, ram14_wen, ram14_wen, ram14_wen, ram14_wen, ram14_wen, ram14_wen, ram14_wen, ram14_wen, ram13_wen, ram13_wen, ram13_wen, ram13_wen, ram13_wen, ram13_wen, ram13_wen, ram13_wen, ram12_wen, ram12_wen, ram12_wen, ram12_wen, ram12_wen, ram12_wen, ram12_wen, ram12_wen, ram11_wen, ram11_wen, ram11_wen, ram11_wen, ram11_wen, ram11_wen, ram11_wen, ram11_wen, ram10_wen, ram10_wen, ram10_wen, ram10_wen, ram10_wen, ram10_wen, ram10_wen, ram10_wen, ram9_wen, ram9_wen, ram9_wen, ram9_wen, ram9_wen, ram9_wen, ram9_wen, ram9_wen, ram8_wen, ram8_wen, ram8_wen, ram8_wen, ram8_wen, ram8_wen, ram8_wen, ram8_wen, ram7_wen, ram7_wen, ram7_wen, ram7_wen, ram7_wen, ram7_wen, ram7_wen, ram7_wen, ram6_wen, ram6_wen, ram6_wen, ram6_wen, ram6_wen, ram6_wen, ram6_wen, ram6_wen, ram5_wen, ram5_wen, ram5_wen, ram5_wen, ram5_wen, ram5_wen, ram5_wen, ram5_wen, ram4_wen, ram4_wen, ram4_wen, ram4_wen, ram4_wen, ram4_wen, ram4_wen, ram4_wen, ram3_wen, ram3_wen, ram3_wen, ram3_wen, ram3_wen, ram3_wen, ram3_wen, ram3_wen, ram2_wen, ram2_wen, ram2_wen, ram2_wen, ram2_wen, ram2_wen, ram2_wen, ram2_wen, ram1_wen, ram1_wen, ram1_wen, ram1_wen, ram1_wen, ram1_wen, ram1_wen, ram1_wen, ram0_wen, ram0_wen, ram0_wen, ram0_wen, ram0_wen, ram0_wen, ram0_wen, ram0_wen };
  assign mem_strb_o_t0 = { ram15_wen_t0, ram15_wen_t0, ram15_wen_t0, ram15_wen_t0, ram15_wen_t0, ram15_wen_t0, ram15_wen_t0, ram15_wen_t0, ram14_wen_t0, ram14_wen_t0, ram14_wen_t0, ram14_wen_t0, ram14_wen_t0, ram14_wen_t0, ram14_wen_t0, ram14_wen_t0, ram13_wen_t0, ram13_wen_t0, ram13_wen_t0, ram13_wen_t0, ram13_wen_t0, ram13_wen_t0, ram13_wen_t0, ram13_wen_t0, ram12_wen_t0, ram12_wen_t0, ram12_wen_t0, ram12_wen_t0, ram12_wen_t0, ram12_wen_t0, ram12_wen_t0, ram12_wen_t0, ram11_wen_t0, ram11_wen_t0, ram11_wen_t0, ram11_wen_t0, ram11_wen_t0, ram11_wen_t0, ram11_wen_t0, ram11_wen_t0, ram10_wen_t0, ram10_wen_t0, ram10_wen_t0, ram10_wen_t0, ram10_wen_t0, ram10_wen_t0, ram10_wen_t0, ram10_wen_t0, ram9_wen_t0, ram9_wen_t0, ram9_wen_t0, ram9_wen_t0, ram9_wen_t0, ram9_wen_t0, ram9_wen_t0, ram9_wen_t0, ram8_wen_t0, ram8_wen_t0, ram8_wen_t0, ram8_wen_t0, ram8_wen_t0, ram8_wen_t0, ram8_wen_t0, ram8_wen_t0, ram7_wen_t0, ram7_wen_t0, ram7_wen_t0, ram7_wen_t0, ram7_wen_t0, ram7_wen_t0, ram7_wen_t0, ram7_wen_t0, ram6_wen_t0, ram6_wen_t0, ram6_wen_t0, ram6_wen_t0, ram6_wen_t0, ram6_wen_t0, ram6_wen_t0, ram6_wen_t0, ram5_wen_t0, ram5_wen_t0, ram5_wen_t0, ram5_wen_t0, ram5_wen_t0, ram5_wen_t0, ram5_wen_t0, ram5_wen_t0, ram4_wen_t0, ram4_wen_t0, ram4_wen_t0, ram4_wen_t0, ram4_wen_t0, ram4_wen_t0, ram4_wen_t0, ram4_wen_t0, ram3_wen_t0, ram3_wen_t0, ram3_wen_t0, ram3_wen_t0, ram3_wen_t0, ram3_wen_t0, ram3_wen_t0, ram3_wen_t0, ram2_wen_t0, ram2_wen_t0, ram2_wen_t0, ram2_wen_t0, ram2_wen_t0, ram2_wen_t0, ram2_wen_t0, ram2_wen_t0, ram1_wen_t0, ram1_wen_t0, ram1_wen_t0, ram1_wen_t0, ram1_wen_t0, ram1_wen_t0, ram1_wen_t0, ram1_wen_t0, ram0_wen_t0, ram0_wen_t0, ram0_wen_t0, ram0_wen_t0, ram0_wen_t0, ram0_wen_t0, ram0_wen_t0, ram0_wen_t0 };
  assign mem_wdata_o = D;
  assign mem_wdata_o_t0 = D_t0;


	ift_sram_mem #(
		128,
		1 << 21
	) i_sram_mem(
		.clk_i(CLK),
		.rst_ni(1'b1),

		.req_i(~CEN),
		.write_i(mem_we_o),
		.addr_i(mem_addr_o),
		.wdata_i(mem_wdata_o),
		.wmask_i(mem_strb_o),
		.rdata_o(Q),

    .req_i_taint(CEN_t0), // not negated
		.write_i_taint(mem_we_o_t0),
		.addr_i_taint(mem_addr_o_t0),
		.wdata_i_taint(mem_wdata_o_t0),
		.wmask_i_taint(mem_strb_o_t0),
		.rdata_o_taint(Q_t0)

	);


endmodule


